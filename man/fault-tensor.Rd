% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fault_displacement.R
\name{fault-tensor}
\alias{fault-tensor}
\alias{fault_tensor}
\alias{fault_tensor_decomposition}
\title{Fault displacement tensor}
\usage{
fault_tensor(displacements, dip_direction = NULL)

fault_tensor_decomposition(ftensor, dip_direction = NULL)
}
\arguments{
\item{displacements}{data.frame containing the strike slip, the
heave, and the vertical throw of the fault's displacement components.}

\item{dip_direction}{(optional) dip direction in degrees.}

\item{ftensor}{Fault displacement tensor. A 3x3 matrix.
If \code{NULL}, the fault tensor will be given in the fault displacement
coordinates. Otherwise, the tensor will be in the geographic reference frame.}
}
\value{
\code{fault_tensor()} returns a 3x3 matrix of class \code{"ftensor"} containing the fault displacement tensor.
\code{fault_tensor_analysis()} returns a list containing the principal fault displacement tensor and the fault orientation.
}
\description{
Creates the fault displacement tensor from displacement components.
If the dip direction is know, the tensor will be rotated into the
geographic reference frame.
}
\details{
x axis of tensor = heave, y = strike slip, z = vertical throw (positive for
thrusting, negative for normal faulting) is the principal fault displacement tensor.
This can be rotated in the fault plane orientation to retrieve slip components and rake.

(\code{\link[=fault_tensor_decomposition]{fault_tensor_decomposition()}}) retrieves the principal fault displacement tensor using Singular Value Decomposition of a Matrix
and the fault orientation if the dip direction is known.

The orientation of the net-slip vector is the lineation component of the fault orientation.

\code{det()} of the fault displacement tensor is the net slip on the fault plane.
}
\examples{
A_princ = fault_tensor(
  displacements =
    data.frame(strikeslip = 2, verticalthrow = -5, heave = 3)
)
print(A_princ)
det(A_princ)

A_geo <- fault_tensor(
  displacements =
    data.frame(strikeslip = 2, verticalthrow = -5, heave = 3),
    dip_direction = 45
)
print(A_geo)
det(A_geo)

fault_tensor_analysis(A_geo, dip_direction = 45)
}
