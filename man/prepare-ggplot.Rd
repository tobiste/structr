% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stereonet_gg.R
\name{prepare-ggplot}
\alias{prepare-ggplot}
\alias{gg}
\alias{ggl}
\title{Prepare points and lines for ggplot}
\usage{
gg(x, ...)

ggl(x, ..., d = 90, n = 1000)
}
\arguments{
\item{x}{object of class \code{"Vec3"}, \code{"Line"}, \code{"Ray"}, \code{"Plane"}, \code{"Pair"}, or \code{"Fault"},
where the rows are the observations and the columns are the coordinates.}

\item{...}{\code{\link[rlang:args_data_masking]{<data-masking>}} Name-value pairs. The name gives the name of the column in the output.
The value can be:
\itemize{
\item A vector of length 1, which will be recycled to the correct length.
\item A vector the same length as the current group (or the whole data frame if ungrouped).
\item \code{NULL}, to remove the column.
\item A data frame or tibble, to create multiple columns in the output.
}}

\item{d}{numeric. Cone angle (small circle radius) in degrees. \code{90} (the default) produces great circles.}

\item{n}{integer. Resolution of line.}
}
\value{
data.frame
}
\description{
Prepare points and lines for ggplot
}
\examples{
if (require("mapproj")) {
  x <- Plane(120, 85)
  ggstereo() +
    ggplot2::geom_point(data = gg(x), ggplot2::aes(x, y), color = "red") +
    ggplot2::geom_path(data = ggl(x), ggplot2::aes(x, y), color = "red")

  x2 <- Line(120, 5)
  ggstereo() +
    ggplot2::geom_point(data = gg(x2), ggplot2::aes(x, y), color = "darkgreen") +
    ggplot2::geom_path(
      data = ggl(x2, d = 8),
      ggplot2::aes(x, y, group = group), color = "darkgreen"
    )

  x3 <- Plane(137, 71)
  ggstereo() +
    ggplot2::geom_point(data = gg(x3), ggplot2::aes(x, y), color = "darkgreen") +
    ggplot2::geom_path(
      data = ggl(x3, d = 90),
      ggplot2::aes(x, y, group = group), color = "darkgreen", lwd = 1
    ) +
    ggplot2::geom_path(
      data = ggl(x3, d = 90 + 11),
      ggplot2::aes(x, y, group = group, color = "sde <90")
    ) +
    ggplot2::geom_path(
      data = ggl(x3, d = 90 - 11),
      ggplot2::aes(x, y, group = group, color = "sde >90")
    )
}
}
