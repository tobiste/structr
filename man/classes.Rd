% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classes-S3.R
\name{classes}
\alias{classes}
\alias{is.spherical}
\alias{is.Vec3}
\alias{is.Line}
\alias{is.Plane}
\alias{is.Pair}
\alias{is.Fault}
\alias{as.spherical}
\alias{as.Vec3}
\alias{as.Line}
\alias{as.Plane}
\alias{as.Pair}
\alias{as.Fault}
\alias{Vec3}
\alias{Line}
\alias{Plane}
\alias{Pair}
\alias{Fault}
\alias{Spherical}
\title{Structure classes}
\usage{
is.spherical(x)

is.Vec3(x)

is.Line(x)

is.Plane(x)

is.Pair(x)

is.Fault(x)

as.spherical(x)

as.Vec3(x)

as.Line(x)

as.Plane(x)

as.Pair(x)

as.Fault(x)

Vec3(x, y, z)

Line(x, plunge)

Plane(x, dip)

Pair(x, y, azimuth, plunge, correction = FALSE)

Fault(x, y, azimuth, plunge, sense, correction = FALSE)

Spherical(x, .class)
}
\arguments{
\item{x, y}{numeric vector or array containing the spherical coordinates
(1st element/column is azimuth, 2nd element/column is inclination, both in
degrees), or object of class \code{"Line"}, \code{"Plane"}, and  \code{"Pair"}, and \code{"Fault"}}

\item{azimuth, plunge}{numeric vectors. Azimuth and plunge of a line (in
degrees)}

\item{correction}{logical. If \code{TRUE} (default), both the fault plane and slip
vector will be rotated so that the slip vector lies on the fault plane by
minimizing the angle between the slip and the plane normal vector. See \code{\link[=correct_pair]{correct_pair()}} for details.}

\item{sense}{(optional) integer. Sense of the line on a fault plane. Either
\code{1}or \code{-1} for normal or thrust offset, respectively. The "sense" is the sign
of the fault's rake (see \code{\link[=Fault_from_rake]{Fault_from_rake()}} for details).}

\item{.class}{character. Spherical class the object should be coerced to.}

\item{dip_direction, dip}{numeric vectors. Dip direction and dip of a plane
(in degrees)}
}
\description{
\code{Vec3}, \code{Line}, \code{Plane}, \code{"Pair"} and \code{Fault} create or convert a \code{"Vec3"}, \code{"Line"}, \code{"Plane"}, \code{"Pair"}, and \code{"Fault"}
S3 class object, respectively, from the given set of values.

\code{as.Vec3}, \code{as.Line}, \code{as.Plane}, \code{as.Pair}, and \code{as.Fault} attempt to coearce its argument into a
\code{"Vec3"}, \code{"Line"}, \code{"Plane"}, and  \code{"Pair"}, and \code{"Fault"} S3 class object, respectively.

\code{is.Line}, \code{is.Plane}, \code{is.Pair}, and \code{is.Fault} test if its argument is a
\code{"Line"}, \code{"Plane"}, and  \code{"Pair"}, and \code{"Fault"} S3 class object, respectively.
}
\details{
\code{is.Vec3}, \code{is.Line}, \code{is.Plane}, \code{is.Pair}, and \code{is.Fault} return \code{TRUE} if its arguments
are an object of class  \code{"Vec3"}, \code{"Line"}, \code{"Plane"}, \code{"Pair"} or \code{"Fault"}, respectively, and
\code{FALSE} otherwise.

\code{is.spherical} returns \code{TRUE} if the argument's class is one of \code{"Vec3()"}, \code{"Line"},
\code{"Plane"}, \code{"Pair"}, or \code{"Fault"} and \code{FALSE} otherwise

\code{as.Vec3()}, \code{as.Line}, \code{as.Plane}, \code{as.Pair}, and \code{as.Fault} are is generic functions.
}
\examples{
x <- Line(120, 50) # create line
is.Line(x) # test if line
Plane(x) # convert to plane

Pair(c(120, 120, 100), c(60, 60, 50), c(110, 25, 30), c(58, 9, 23))
Fault(c(120, 120, 100), c(60, 60, 50), c(110, 25, 30), c(58, 9, 23), c(1, -1, 1))
}
